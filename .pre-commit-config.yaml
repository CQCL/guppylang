repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-added-large-files
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: check-toml
      - id: check-vcs-permalinks
      - id: check-yaml
      - id: detect-private-key
      - id: end-of-file-fixer
        exclude: |
          (?x)^(
            .*\.json|
            .*\.err|
            tests/.*|
            .*CHANGELOG.md|
            \.github/.*|
            .release-please-manifest.json
          )$
      - id: trailing-whitespace
        exclude: |
          (?x)^(
            .*\.json|
            .*\.err|
            tests/.*|
            .*CHANGELOG.md|
            \.github/.*|
            .release-please-manifest.json
          )$
      - id: fix-byte-order-marker
      - id: mixed-line-ending
      # Python-specific
      - id: check-ast
      - id: check-docstring-first
      - id: debug-statements

  - repo: https://github.com/crate-ci/typos
    rev: typos-dict-v0.12.6
    hooks:
      - id: typos
        args: []

  - repo: local
    hooks:
      - id: ruff-format
        name: ruff format
        description: Format python code with `ruff`.
        entry: uv run ruff format guppylang
        language: system
        files: \.py$
        pass_filenames: false
      - id: ruff-check
        name: ruff
        description: Check python code with `ruff`.
        entry: uv run ruff check --fix --exit-non-zero-on-fix guppylang
        language: system
        files: \.py$
        pass_filenames: false
      - id: mypy-check
        name: mypy
        description: Check python code with `mypy`.
        entry: uv run mypy guppylang
        language: system
        files: \.py$
        pass_filenames: false
      - id: cargo-check
        name: Cargo check
        entry: bash -c 'cd validator && exec cargo check'
        pass_filenames: false
        types: [file, rust]
        language: system
      - id: rust-linting
        name: Rust linting
        entry: bash -c 'cd validator && exec cargo fmt --all --'
        pass_filenames: true
        types: [file, rust]
        language: system
      - id: rust-clippy
        name: Rust clippy
        entry: bash -c 'cd validator && exec cargo clippy --all-targets --all-features -- -Dclippy::all'
        pass_filenames: false
        types: [file, rust]
        language: system
